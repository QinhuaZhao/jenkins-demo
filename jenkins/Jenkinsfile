pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/KubernetesPod.yaml'
    }
  }
  environment{
    APP_NAME="jenkins-demo"
    ORIGIN_REPO="https://index.docker.io/v1"
    REPO="qinhuazhao"
    IMAGE_NAME="jenkins-demo"
    IMAGE_TAG="latest"
        //IMAGE_TAG =  sh(returnStdout: true,script: 'echo $image_tag').trim()
        //ORIGIN_REPO =  sh(returnStdout: true,script: 'echo $origin_repo').trim()
        //REPO =  sh(returnStdout: true,script: 'echo $repo').trim()
        //BRANCH =  sh(returnStdout: true,script: 'echo $branch').trim()
  }
  stages {
    stage('Git'){
      steps{
        git branch: 'master', credentialsId: '', url: 'https://github.com/QinhuaZhao/demo.git'
      }
    }
    stage('Run maven') {
      steps {
        sh 'set'
        sh "echo OUTSIDE_CONTAINER_ENV_VAR = ${CONTAINER_ENV_VAR}"
        container('maven') {
          sh 'echo MAVEN_CONTAINER_ENV_VAR = ${CONTAINER_ENV_VAR}'
          sh 'mvn -version'
          sh 'mvn package -B -DskipTests'
        }
        container('busybox') {
          sh 'echo BUSYBOX_CONTAINER_ENV_VAR = ${CONTAINER_ENV_VAR}'
          sh '/bin/busybox'
        }
      }
    }
    stage('Image Build And Publish'){
      steps{
        container("kaniko") {
          sh '/kaniko/executor -f `pwd`/Dockerfile -c `pwd` --insecure --skip-tls-verify --cache=true --destination=${ORIGIN_REPO}/${REPO}/${IMAGE_NAME}:${IMAGE_TAG}'
          //sh "kaniko -f `pwd`/Dockerfile -c `pwd` --insecure --skip-tls-verify --cache=true --destination=${ORIGIN_REPO}/${REPO}/${IMAGE_NAME}:${IMAGE_TAG}"
        }
      }
    }
  }
}